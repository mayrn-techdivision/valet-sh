##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: set current mysql base path
  set_fact:
    current_mysql_base_path: "{{ mysql_community_server.base_path }}57"
    current_mysql_version_key: "5.7"
    current_mysql_key: "mysql57"

- name: set curent dist path
  set_fact:
    current_mysql_dist_path: "{{ current_mysql_base_path }}/dist"
    current_mysql_etc_path: "{{ current_mysql_base_path }}/etc"
    current_mysql_etc_conf_path: "{{ current_mysql_base_path }}/etc/conf.d"
    current_mysql_data_path: "{{ current_mysql_base_path }}/data"

- name: "create basic directories"
  file:
    path: "{{ current_mysql_base_directory }}"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0755'
    state: directory
  become: true
  with_items:
    - "{{ current_mysql_base_path }}"
    - "{{ current_mysql_dist_path }}"
    - "{{ current_mysql_etc_path }}"
    - "{{ current_mysql_etc_conf_path }}"
  loop_control:
    loop_var: current_mysql_base_directory

- name: "create data directory '{{ current_mysql_data_path }}'"
  file:
    path: "{{ current_mysql_data_path }}"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0700'
    state: directory
  become: true

- name: "provide .my.cnf configuration file"
  template:
    src: "mysql57/.my.cnf.j2"
    dest: "{{ current_home }}/.my5.7.cnf"
    mode: '0644'

- name: "provide my.cnf configuration file"
  template:
    src: "mysql57/my.cnf.j2"
    dest: "{{ current_mysql_etc_path }}/my.cnf"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0644'
  become: true
  notify: "service | {{ current_mysql_key }} | restarted"

- name: "provide mysql.cnf configuration file"
  template:
    src: "mysql57/mysql.cnf.j2"
    dest: "{{ current_mysql_etc_conf_path }}/mysql.cnf"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0644'
  become: true

- name: "provide mysqldump.cnf configuration file"
  template:
    src: "mysql57/mysqldump.cnf.j2"
    dest: "{{ current_mysql_etc_conf_path }}/mysqldump.cnf"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0644'
  become: true

- name: "provide mysqld.cnf configuration file"
  template:
    src: "mysql57/mysqld.cnf.j2"
    dest: "{{ current_mysql_etc_conf_path }}/mysqld.cnf"
    owner: "{{ mysql_community_server.default_user }}"
    group: "{{ mysql_community_server.default_group }}"
    mode: '0644'
  become: true
  notify: "service | {{ current_mysql_key }} | restarted"

- name: "provide {{ current_mysql_key }} service unit file"
  template:
    src: "service/{{ current_mysql_key }}.service.j2"
    dest: "/etc/service/system/{{ current_mysql_key }}.service"
    owner: root
    group: root
    mode: '0644'
  become: true
  notify: "service | {{ current_mysql_key }} | restarted"

- name: "provide {{ current_mysql_key }} mysql client"
  template:
    src: "wrapper/mysql.j2"
    dest: "/usr/local/bin/mysql{{ current_mysql_version_key }}"
    owner: root
    group: root
    mode: '0755'
  become: true

- name: "provide mysqldump{{ current_mysql_version_key }} client"
  template:
    src: "wrapper/mysqldump.j2"
    dest: "/usr/local/bin/mysqldump{{ current_mysql_version_key }}"
    owner: root
    group: root
    mode: '0755'
  become: true

- name: "provide mysqladmin{{ current_mysql_version_key }} client"
  template:
    src: "wrapper/mysqldump.j2"
    dest: "/usr/local/bin/mysqladmin{{ current_mysql_version_key }}"
    owner: root
    group: root
    mode: '0755'
  become: true

###
### dist installation
###

- name: set default value for var 'current_mysql_dist_is_latest'
  set_fact:
    current_mysql_dist_is_latest: false

- name: "get stats for dir '{{ current_mysql_dist_path }}/package.sig'"
  stat:
    path: "{{ current_mysql_dist_path }}/package.sig"
  register: current_mysql_package_sig_status_obj

- block:
    - name: "read package.sig file"
      slurp:
        src: "{{ current_mysql_dist_path }}/package.sig"
      register: current_mysql_package_sig_obj

    - name: override value for 'current_mysql_dist_is_latest'
      set_fact:
        current_mysql_dist_is_latest: true
      when: (current_mysql_package_sig_obj['content'] | b64decode) == mysql_community_server_57.package_signature
  when: current_mysql_package_sig_status_obj.stat.exists

- block:
    - name: "ensure '{{ current_mysql_key }}' is stopped"
      service:
        name: "{{ current_mysql_key }}"
        state: stopped
      become: true

    - name: "ensure dist folder '{{ current_mysql_dist_path }}' is deleted"
      file:
        path: "{{ current_mysql_dist_path }}"
        state: absent
      become: true

    - name: "ensure dist folder '{{ current_mysql_dist_path }}' is created"
      file:
        path: "{{ current_mysql_dist_path }}"
        owner: "{{ mysql_community_server.default_user }}"
        group: "{{ mysql_community_server.default_group }}"
        mode: '0755'
        state: directory
      become: true

    - name: Download Mysql package
      get_url:
        url: "{{ mysql_community_server_57.package_url }}"
        dest: "/tmp/{{ mysql_community_server_57.package_url | basename }}"

    - name: Extract mysql archive
      unarchive:
        src: "/tmp/{{ mysql_community_server_57.package_url | basename }}"
        dest: "{{ current_mysql_dist_path }}"
        extra_opts: [--strip-components=1]
      become: true
      become_user: "{{ mysql_community_server.default_user }}"

    - name: "delete mysql release tar.gz"
      file:
        path: "/tmp/{{ mysql_community_server_57.package_url | basename }}"
        state: absent

    - name: "ensure {{ current_mysql_key }} enabled"
      service:
        name: "{{ current_mysql_key }}"
        enabled: yes
        daemon_reload: yes
      become: true

    - name: "persist package signing key"
      copy:
        content: "{{ mysql_community_server_57.package_signature }}"
        dest: "{{ current_mysql_dist_path }}/package.sig"
        mode: '0755'
      become: true
      become_user: "{{ mysql_community_server.default_user }}"

  when: not current_mysql_dist_is_latest|bool

- name: "check if '{{ current_mysql_data_path }}' is empty"
  find:
    path: '{{ current_mysql_data_path }}'
  register: current_mysql_data_dir_status_obj
  become: true

- block:
    - name: create dummy mysql-client configuration file
      tempfile:
        state: file
        suffix: temp
      register: mysql_client_dummy_config_file_obj

    - name: run mysql initialize command
      shell: "{{ current_mysql_dist_path }}/bin/mysqld --defaults-file={{ current_mysql_etc_path }}/my.cnf --datadir={{ current_mysql_data_path }} --pid-file=/run/mysqld/{{ current_mysql_key }}.pid --initialize-insecure"
      become: true

    - name: ensure mysql 5.7 is restarted
      service:
        name: mysql57
        daemon_reload: true
        state: restarted
      become: true

    - name: Deletes anonymous MySQL server user for ansible_fqdn
      mysql_user:
        login_host: 127.0.0.1
        login_port: "{{ mysql_community_server_57.port }}"
        login_user: root
        login_password: ""
        config_file: "{{ mysql_client_dummy_config_file_obj.path }}"
        user: ""
        host: "{{ ansible_fqdn }}"
        state: "absent"

    - name: Deletes anonymous MySQL server user for localhost
      mysql_user:
        login_host: 127.0.0.1
        login_port: "{{ mysql_community_server_57.port }}"
        login_user: root
        login_password: ""
        config_file: "{{ mysql_client_dummy_config_file_obj.path }}"
        user: ""
        state: "absent"

    - name: Removes the MySQL test database
      mysql_db:
        login_host: 127.0.0.1
        login_port: "{{ mysql_community_server_57.port }}"
        login_user: root
        login_password: ""
        config_file: "{{ mysql_client_dummy_config_file_obj.path }}"
        db: test
        state: absent

    - name: Set root password
      mysql_user:
        login_host: 127.0.0.1
        login_port: "{{ mysql_community_server_57.port }}"
        login_user: root
        login_password: ""
        config_file: "{{ mysql_client_dummy_config_file_obj.path }}"
        user: "root"
        password: "root"
        state: present

    - name: ensure dummy mysql-client configuration file is deleted
      file:
        path: "{{ mysql_client_dummy_config_file_obj.path }}"
        state: absent
  when:
    - current_mysql_data_dir_status_obj.matched == 0